version: '3.9'

services:
  db:
    image: postgres
    volumes:
      - db-volume:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    restart: always
    ports:
      - "5433:5432"
  spring-backend:
    build: ./spring-backend/
    ports: 
      - "8080:8080"
    depends_on:
      - "db"
      - "zookeeper"
      - "kafka"
    environment:
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_PHONE_NUMBER: ${TWILIO_PHONE_NUMBER}
      ACCELEROMETER_CRASH_THRESHOLD: ${ACCELEROMETER_CRASH_THRESHOLD}
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      KAFKA_HOST: ${KAFKA_HOST}
  react-frontend:
    build: ./react-frontend/
    ports:
      - "3000:3000"
    depends_on:
      - "db"
      - "spring-backend"
  liquibase:
    image: liquibase/liquibase
    container_name: liquibase
    depends_on:
      - "db"
    volumes:
      - ./liquibase/changelog.xml:/liquibase/changelog.xml
      - ./liquibase/sql-files/:/liquibase/sql-files/
    command: [
        '--url=jdbc:postgresql://db:5432/${DB_NAME}',
        '--changelog-file=changelog.xml',
        '--username=${DB_USERNAME}',
        '--password=${DB_PASSWORD}',
        'update'
        ]
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  db-volume: